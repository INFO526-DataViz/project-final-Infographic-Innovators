---
title: "Comprehensive analysis of air crash data"
subtitle: "Proposal"
format:
  html:
    code-tools: true
    code-overflow: wrap
    code-line-numbers: true
    embed-resources: true
editor: visual
code-annotations: hover
categories: 
  - Data visualization
execute:
  warning: false
---

```{r load_pkgs, message=FALSE, output=FALSE}
#| code-fold: true
#| code-summary: "Installed Packages"

# GETTING THE LIBRARIES
if (!require(pacman))
  install.packages(pacman)

pacman::p_load(tidyverse,
               formattable,
               tidytuesdayR,
               janitor,
               dlookr,
               here)
```

## Dataset

```{r load_dataset, message=FALSE, output=FALSE}
# Reading the data using read_csv
flights_ntsb <- read_csv(here("data", "flight_crash_data_NTSB.csv"))

flights_ntsb <- flights_ntsb |>
  clean_names()
```

In preparation for our analysis, we loaded the data and preliminarily reviewed its structure and contents. For example, using inline code such as clean_names, diagnose, describe, and formattable. We obtained an overview of the dataset's variables and initial statistics. This preliminary step confirmed the dataset's suitability for answering our research questions, which revolve around identifying temporal patterns, assessing regional safety performance, and evaluating the effectiveness of safety regulations over the past four decades.

## Background

The dataset central to our investigation was procured through a formal request to the National Transportation Safety Board ([NSTB](https://www.ntsb.gov/Pages/AviationQueryV2.aspx)). It encompasses detailed records of aircraft crashes in the U.S. from January 1, 1980, to December 31, 2022. The dataset is structured as a tibble with 89,134 rows and 38 columns, amounting to 3,387,093 individual data points. This rich dataset is ideal for our purposes because it enables both time-series and geospatial analyses---methods we believe are critical for understanding the dynamics and spatial distribution of aircraft accidents over time.

```{r diagnose_flights, message=FALSE}
#| code-fold: true
#| code-summary: "Flights Report Data Diagnosis Code"

# Getting basic information about the dataset

flights_ntsb |>
  diagnose() |>
  formattable()
```

```{r describe_flights, message=FALSE}
#| code-fold: true
#| code-summary: "Flights Report Data Describe Code"

# Getting basic statistical information about the dataset

flights_ntsb |>
  describe() |>
  formattable()
```

## Value

Our project's primary goal is to conduct an in-depth analysis of aircraft crash incidents within the United States to uncover temporal trends and geographical patterns. This objective is fueled by our diverse personal experiences with air travel, which range from enthusiasm to apprehension. This stems from talking about places we've traveled to, we chose the data as some of us are more comfortable with flying than others. We decided by looking at aircraft crash data that it could be a chance to get more informed about aircraft crashes within the United States. By examining the data, we hope to gain a clearer understanding of the factors contributing to these incidents and alleviate some of the concerns regarding aviation safety. We wanted do timeseries analysis as well as geospatial analysis and this data presented itself as a great opportunity to do both. We intend to design a shiny app so that we can display the a timeseries change of crashes throughout the years.

## Questions

The two questions to be answered are:

### Question 1

What is the historical trend in aircraft crashes and injuries, including the distribution of injury severity (fatal, serious, minor)? Additionally, which events lead to the most injuries or fatalities?

### Question 2

Where are the most common locations for aircraft crashes, and are there any specific connections like months, weather conditions associated with crash frequencies?

## Analysis plan

### Approach for question 1

In this Question, we visualize the trend in aircraft crashes historically. We are going to plot this trend based on different aspects like Severity of Injury which is represented using column `highest_injury_level`. Here they classify a particular injury as a `minor injury`, `serious injury` and `fatal injury` based on the number of casualties that occurred in the crash.

We will also discuss on what probable events lead to most injuries and/or fatalities in a flight crash. We are visualising this trend using Time-Series Analysis where we can compare the different crashes that occur over time and further classify the type of crash and number of injuries that took place. Our Approach to this problem is by implementing Line Graphs which can show the different Crash date based on the column `event date` and stacking a Time-Series Plot and finding the highest number of injury count and classifying them into their individual injury-type. This can help us not only show the number of crashes happening per year but also have them sorted based on their fatality type.

### Approach for question 2

Geographical Analysis-Visualization: A geographical heatmap or scatter plot using latitude and longitude to pinpoint crash locations. Areas with a high concentration of crashes will be highlighted.

## Implementation

### Plan of Attack

|               Week                | Weekly Tasks                                                                          | Persons in Charge |  Backup  |
|:--------------:|-------------------------|:--------------:|:--------------:|
|       until November 8^th^        | Explore and finalize the dataset and the problem statements                           |     Everyone      | Everyone |
|                \-                 | Complete the proposal and assign some high-level tasks                                |     Everyone      | Everyone |
|     November 9^th^ to 15^th^      | Getting to know about Shiny application                                               |        TBD        |   TBD    |
|                \-                 | Data cleaning and Data pre-processing                                                 |        TBD        |   TBD    |
|                \-                 | Question specific exploration and data categorization \<change to question specific\> |        TBD        |   TBD    |
|     November 16^th^ to 22^nd^     | Generating plots for Q1                                                               |        TBD        |   TBD    |
|                \-                 | Generating plots for Q2                                                               |        TBD        |   TBD    |
|                \-                 | Exploring on how to integrate our specific visualizations and shiny                   |        TBD        |   TBD    |
|     November 23^rd^ to 29^th^     | Generating remaining parts of the plots for Q1 and Q2                                 |        TBD        |   TBD    |
|                \-                 | Improving the generated plots                                                         |        TBD        |   TBD    |
|                \-                 | Start integrating shiny and our visualizations                                        |        TBD        |   TBD    |
| November 30^th^ to December 6^th^ | Refining the code for code review with comments                                       |        TBD        |   TBD    |
|                \-                 | Having some base functions to use themes interchangably                               |        TBD        |   TBD    |
|                \-                 | Continue with the integration of shiny and our plots                                  |        TBD        |   TBD    |
|     December 7^th^ to 13^th^      | Complete the shiny application with multiple user functionality                       |        TBD        |   TBD    |
|                \-                 | Review the generated plots and shiny integration                                      |        TBD        |   TBD    |
|                \-                 | Write-up and presentation for the project                                             |     Everyone      | Everyone |

: {.hover}

### Repo Organization

-   **'data/':** Used for storing any necessary data files for the project, such as input files.

-   **'images/':**

-   **'presentation_files/':**

-   **'\_extra/':**

-   **'\_freeze/':**

-   **'\_site/':**

-   **'.github/':**
