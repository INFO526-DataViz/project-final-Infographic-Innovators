[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "",
    "text": "Installed Packages\n# GETTING THE LIBRARIES\nif (!require(pacman))\n  install.packages(pacman)\n\npacman::p_load(formattable,\n               tidyverse,\n               janitor,\n               dlookr,\n               here)"
  },
  {
    "objectID": "proposal.html#high-level-goal",
    "href": "proposal.html#high-level-goal",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "High Level Goal",
    "text": "High Level Goal\nBuild a Shiny app where users can look at different plots to analyze the flight crashes occurred in the United States form 1980 to 2022."
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Dataset",
    "text": "Dataset\n\n# Reading the data using read_csv\nflights_ntsb &lt;- read_csv(here(\"data\", \"flight_crash_data_NTSB.csv\"))\n\n#selecting columns\nflights_ntsb &lt;- flights_ntsb |&gt;\n  select(\n    EventType, EventDate,\n    City, State,\n    HasSafetyRec,\n    ReportType, HighestInjuryLevel,\n    FatalInjuryCount, SeriousInjuryCount,\n    MinorInjuryCount, ProbableCause,\n    Latitude, Longitude,\n    AirCraftCategory, AirportID,\n    AirportName, AmateurBuilt,\n    NumberOfEngines, AirCraftDamage,\n    WeatherCondition\n  ) |&gt;\n  clean_names()\nflights_ntsb\n\nIn preparation for our analysis, we loaded the data and preliminary reviewed its structure and contents. For example, using inline code such as clean_names, diagnose, describe, and formattable. We obtained an overview of the dataset’s variables and initial statistics. This preliminary step confirmed the dataset’s suitability for answering our research questions, which revolve around identifying temporal patterns and finding relations between parameters that effect crashes."
  },
  {
    "objectID": "proposal.html#background",
    "href": "proposal.html#background",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Background",
    "text": "Background\nThe dataset central to our investigation was procured through a request to the National Transportation Safety Board (NSTB). It encompasses detailed records of aircraft crashes in the U.S. from January 1, 1980, to December 31, 2022. The dataset is structured as a tibble with 89,134 rows and 38 columns, out of which a few unnecessary columns has been removed for our purpose which resulted in a tibble with 89,134 rows and 20 columns. This rich dataset is ideal for our purpose because it enables both time-series, geo-spatial analysis and also other factors that affect the crashes - methods we believe are critical for understanding the dynamics and geo-spatial distribution of aircraft accidents over time.\n\n\nFlights Report Data Diagnosis Code\n# Getting basic information about the dataset\n\nflights_ntsb |&gt;\n  diagnose() |&gt;\n  formattable()\n\n\n\n\n\n\n\nvariables\n\n\ntypes\n\n\nmissing_count\n\n\nmissing_percent\n\n\nunique_count\n\n\nunique_rate\n\n\n\n\n\n\nevent_type\n\n\ncharacter\n\n\n8\n\n\n0.008975251\n\n\n3\n\n\n3.365719e-05\n\n\n\n\nevent_date\n\n\nPOSIXct\n\n\n0\n\n\n0.000000000\n\n\n80322\n\n\n9.011376e-01\n\n\n\n\ncity\n\n\ncharacter\n\n\n8\n\n\n0.008975251\n\n\n19038\n\n\n2.135885e-01\n\n\n\n\nstate\n\n\ncharacter\n\n\n155\n\n\n0.173895483\n\n\n58\n\n\n6.507057e-04\n\n\n\n\nhas_safety_rec\n\n\nlogical\n\n\n0\n\n\n0.000000000\n\n\n2\n\n\n2.243813e-05\n\n\n\n\nreport_type\n\n\ncharacter\n\n\n1\n\n\n0.001121906\n\n\n5\n\n\n5.609532e-05\n\n\n\n\nhighest_injury_level\n\n\ncharacter\n\n\n126\n\n\n0.141360199\n\n\n5\n\n\n5.609532e-05\n\n\n\n\nfatal_injury_count\n\n\nnumeric\n\n\n0\n\n\n0.000000000\n\n\n52\n\n\n5.833913e-04\n\n\n\n\nserious_injury_count\n\n\nnumeric\n\n\n0\n\n\n0.000000000\n\n\n24\n\n\n2.692575e-04\n\n\n\n\nminor_injury_count\n\n\nnumeric\n\n\n0\n\n\n0.000000000\n\n\n49\n\n\n5.497341e-04\n\n\n\n\nprobable_cause\n\n\ncharacter\n\n\n29568\n\n\n33.172526757\n\n\n56119\n\n\n6.296026e-01\n\n\n\n\nlatitude\n\n\nnumeric\n\n\n0\n\n\n0.000000000\n\n\n61321\n\n\n6.879642e-01\n\n\n\n\nlongitude\n\n\nnumeric\n\n\n0\n\n\n0.000000000\n\n\n62243\n\n\n6.983082e-01\n\n\n\n\nair_craft_category\n\n\ncharacter\n\n\n13\n\n\n0.014584782\n\n\n38\n\n\n4.263244e-04\n\n\n\n\nairport_id\n\n\ncharacter\n\n\n40230\n\n\n45.134292189\n\n\n9656\n\n\n1.083313e-01\n\n\n\n\nairport_name\n\n\ncharacter\n\n\n32675\n\n\n36.658289766\n\n\n25807\n\n\n2.895304e-01\n\n\n\n\namateur_built\n\n\ncharacter\n\n\n0\n\n\n0.000000000\n\n\n7\n\n\n7.853344e-05\n\n\n\n\nnumber_of_engines\n\n\ncharacter\n\n\n1546\n\n\n1.734467207\n\n\n40\n\n\n4.487625e-04\n\n\n\n\nair_craft_damage\n\n\ncharacter\n\n\n21\n\n\n0.023560033\n\n\n29\n\n\n3.253528e-04\n\n\n\n\nweather_condition\n\n\ncharacter\n\n\n173\n\n\n0.194089797\n\n\n7\n\n\n7.853344e-05\n\n\n\n\n\n\n\n\n\nFlights Report Data Describe Code\n# Getting basic statistical information about the dataset\n\nflights_ntsb |&gt;\n  describe() |&gt;\n  formattable()\n\n\n\n\n\n\n\ndescribed_variables\n\n\nn\n\n\nna\n\n\nmean\n\n\nsd\n\n\nse_mean\n\n\nIQR\n\n\nskewness\n\n\nkurtosis\n\n\np00\n\n\np01\n\n\np05\n\n\np10\n\n\np20\n\n\np25\n\n\np30\n\n\np40\n\n\np50\n\n\np60\n\n\np70\n\n\np75\n\n\np80\n\n\np90\n\n\np95\n\n\np99\n\n\np100\n\n\n\n\n\n\nfatal_injury_count\n\n\n89134\n\n\n0\n\n\n0.3635538\n\n\n2.251023e+00\n\n\n7.539771e-03\n\n\n0.00000\n\n\n65.05258\n\n\n5829.500\n\n\n0\n\n\n0.00\n\n\n0.0000\n\n\n0.0000\n\n\n0.00000\n\n\n0.00\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n1.00000\n\n\n2.00000\n\n\n4.00000\n\n\n2.650000e+02\n\n\n\n\nserious_injury_count\n\n\n89134\n\n\n0\n\n\n0.1950210\n\n\n7.612223e-01\n\n\n2.549704e-03\n\n\n0.00000\n\n\n37.67354\n\n\n3044.159\n\n\n0\n\n\n0.00\n\n\n0.0000\n\n\n0.0000\n\n\n0.00000\n\n\n0.00\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n1.00000\n\n\n1.00000\n\n\n2.00000\n\n\n8.100000e+01\n\n\n\n\nminor_injury_count\n\n\n89134\n\n\n0\n\n\n0.3146386\n\n\n1.399480e+00\n\n\n4.687541e-03\n\n\n0.00000\n\n\n42.29602\n\n\n3134.592\n\n\n0\n\n\n0.00\n\n\n0.0000\n\n\n0.0000\n\n\n0.00000\n\n\n0.00\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n1.00000\n\n\n2.00000\n\n\n3.00000\n\n\n1.370000e+02\n\n\n\n\nlatitude\n\n\n89134\n\n\n0\n\n\n988.6591476\n\n\n2.011036e+05\n\n\n6.735939e+02\n\n\n12.22944\n\n\n211.29325\n\n\n44673.978\n\n\n0\n\n\n0.00\n\n\n0.0000\n\n\n0.0000\n\n\n21.31861\n\n\n29.18\n\n\n31.18077\n\n\n33.94250\n\n\n35.97083\n\n\n38.55095\n\n\n40.43017\n\n\n41.40944\n\n\n42.56583\n\n\n46.36235\n\n\n58.41937\n\n\n64.40744\n\n\n4.351118e+07\n\n\n\n\nlongitude\n\n\n89134\n\n\n0\n\n\n-123.9442394\n\n\n6.343362e+03\n\n\n2.124701e+01\n\n\n34.84990\n\n\n-149.65240\n\n\n22435.028\n\n\n-1004241\n\n\n-158.58\n\n\n-147.7193\n\n\n-122.1001\n\n\n-116.60010\n\n\n-111.85\n\n\n-106.08916\n\n\n-96.58913\n\n\n-90.31158\n\n\n-84.50032\n\n\n-80.45880\n\n\n-77.00008\n\n\n-70.81000\n\n\n0.00000\n\n\n0.00000\n\n\n0.00000\n\n\n1.741242e+02"
  },
  {
    "objectID": "proposal.html#value",
    "href": "proposal.html#value",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Value",
    "text": "Value\nOur project’s primary goal is to conduct an in-depth analysis of aircraft crash incidents within the United States to uncover temporal trends and geographical patterns. This objective is fueled by our diverse personal experiences with air travel, which range from enthusiasm to apprehension. This stems from talking about places we’ve traveled to, we chose the data as some of us are more comfortable with flying than others. We decided by looking at aircraft crash data that it could be a chance to get more informed about aircraft crashes within the United States. By examining the data, we hope to gain a clearer understanding of the factors contributing to these incidents and alleviate some of the concerns regarding aviation safety. We wanted do time series analysis as well as geo-spatial analysis and this data presented itself as a great opportunity to do both. We intend to design a shiny app so that we can display the a time series change of crashes throughout the years."
  },
  {
    "objectID": "proposal.html#problem-statement",
    "href": "proposal.html#problem-statement",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Problem Statement",
    "text": "Problem Statement\nWe conducted Exploratory Data Analysis on the dataset and categorized our analysis into three main areas:\n\nExamining Aircraft Crashes, with a focus on their locations, timings, and consequences.\nInvestigating the Causes of Crashes.\nAssessing the Influence of Weather Conditions on Crashes."
  },
  {
    "objectID": "proposal.html#plan-of-action",
    "href": "proposal.html#plan-of-action",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Plan of Action",
    "text": "Plan of Action\n\nExamining Aircraft Crashes, with a focus on their locations, timings, and consequences\n\nChoropleth Map - An Animated Choropleth Map of Aircraft Crashes in the United States Over Time:\nThe animated Choropleth Map provides a dynamic and visually compelling representation of aircraft crashes across the United States. This data visualization leverages the US states of crash locations and spans multiple years to reveal temporal patterns. This Choropleth Map not only facilitates the identification of regions with higher crash frequencies but also offers insights into the evolving dynamics of air travel safety over time.\nTime-series Plot- Analysis of Aircraft Crashes and Fatalities:\nWe visualize the trend in aircraft crashes historically. We are going to plot this trend based on different aspects like total fatalities which is represented using column fatal_injury_count, serious_injury_count and minor_injury_count. Here they classify a particular injury count as a minor, serious and fatal injury based on the level of casualties that occurred in the crash. We also would like to highlight few notable airplane crashes in the history in our time-series analysis.\nRadial bar Plot - A Radial Perspective on Aircraft Crashes During Flight Phases:\nWe will be representing the count of crashes on the x-axis and the phases of flight (takeoff, landing etc,.) on the y-axis in a circular manner. We can transform the bar plot into a radial form, emphasizing the distribution of crashes during these critical flight stages. This visualization technique allows for a quick understanding of the relative frequency of crashes during takeoff and landing, enabling insights into the safety challenges faced during these flight phases.\n\n\n\nAnalysis of Causes of Crashes\n\nWaffle plot - Common Causes of Aircraft Crashes:\nThe waffle plot offers an overview of the most common causes of aircraft crashes throughout the United States. Leveraging the probable_cause column, which contains concise descriptions of crash events, the waffle plot employs text summarization techniques to extract and categorize these causes into manageable groups. This visualization provides a straightforward and insightful representation of the key factors contributing to aviation incidents, aiding in the identification of the primary causes that warrant further investigation.\nDensity plot - Causes and Severity of Aircraft Crashes:\n\nThe density polot delves into the relationship between specific crash cause (\"pilot's failure\") and the severity of injuries incurred. Drawing from the `probable_cause` column, as well as the `severity` and `event_date` columns, this visualization quantifies the number of crashes attributed to cause \"pilot's failure\"while distinguishing between varying levels of severity. By visualizing this data in a density plot, it becomes evident how severe are the crashes.\n\n\nAssessing the Influence of Weather Conditions on Crashes\n\nRadar Plot - Analysis of Aircraft Crashes by Month and Weather Conditions:\nUsing radar plot we would like to display multiple weather conditions on the axes of the plot, while the spokes represent different months. Each radar plot point signifies the frequency of crashes occurring in a specific month under a particular weather condition. This comprehensive visualization enables a quick assessment of the relationship between weather conditions, crash occurrences, and the month when the crash has occurred.\n\nUltimately, we plan to utilize the interactive features of the Shiny application to present these plots in a user-friendly manner.\n\n\nVariables of focus\n\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nevent_type\nType of event - accident, incident or occurrence\n\n\nevent_date\nDate time of when the event has occurred\n\n\ncity\nThe city or place location closest to the site of the event\n\n\nstate\nThe state in which the site of the event is present\n\n\nhighest_injury_level\nIndicate the highest level of injury among all injuries sustained as a result of the event\n\n\nfatal_injury_count\nThe total number of fatal injuries from an event\n\n\nserious_injury_count\nThe total number of serious injuries from an event\n\n\nminor_injury_count\nThe total number of minor injuries from an event\n\n\nprobable_cause\nThe probable cause for the aircraft crash as per the NTSB report\n\n\nlatitude\nLatitude for the event site in degrees and decimal degrees.\n\n\nlongitude\nLongitude for the event site in degrees and decimal degrees.\n\n\nweather_condition\nThe basic weather conditions at the time of the event"
  },
  {
    "objectID": "proposal.html#implementation",
    "href": "proposal.html#implementation",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Implementation",
    "text": "Implementation\n\nWeekly Plan\n\n\n\n\n\n\n\n\n\nWeek\nWeekly Tasks\nPersons in Charge\nBackup\n\n\n\n\nuntil November 8th\nExplore and finalize the data set and the problem statements\nEveryone\nEveryone\n\n\n-\nComplete the proposal and assign some high-level tasks\nEveryone\nEveryone\n\n\nNovember 9th to 15th\nGetting to know about Shiny application\nAntonio\nBharath\n\n\n-\nData cleaning and Data pre-processing\nThanoosha\nEshaan\n\n\n-\nQuestion specific exploration and data categorization\nThanoosha, Bharath\nAntonio, Eshaan\n\n\nNovember 16th to 22nd\nGenerating plots for Heat-Map and Time-Series\nAntonio, Bharath\nEshaan\n\n\n-\nGenerating plots for Radial bar Plot and Bar Plot\nEshaan, Antonio\nThanoosha\n\n\n-\nGenerating plots for Stacked Area Chart and Radar Plot\nThanoosha\nBharath\n\n\n-\nExploring on how to integrate our specific visualizations and shiny\nEshaan\nAntonio\n\n\nNovember 23rd to 29th\nGenerating remaining parts of the plots for all the plots\nEveryone\nEveryone\n\n\n-\nImproving the generated plots\nBharath\nThanoosha\n\n\n-\nStart integrating shiny and our visualizations\nEshaan\nAntonio\n\n\nNovember 30th to December 6th\nRefining the code for code review with comments\nEveryone\nEveryone\n\n\n-\nContinue with the integration of shiny and our plots\nBharath\nThanoosha\n\n\nDecember 7th to 13th\nComplete the shiny application with multiple user functionality\nAntonio\nEshaan\n\n\n-\nReview the generated plots and shiny integration\nThanoosha\nBharath\n\n\n-\nWrite-up and presentation for the project\nEveryone\nEveryone\n\n\n\n\n\nRepo Organization\nThe following are the folders involved in the Project repository.\n\n‘data/’: Used for storing any necessary data files for the project, such as input files.\n‘images/’: Used for storing image files used in the project.\n‘presentation_files/’: Folder for having presentation related files.\n‘_extra/’: Used to brainstorm our analysis which won’t impact our project workflow.\n‘_freeze/’: This folder is used to store the generated files during the build process. These files represent the frozen state of the website at a specific point in time.\n‘_site/’: Folder used to store the generated static website files after the site generator processes the quarto document.\n‘.github/’: Folder for storing github templates and workflow.\n\nWe will be creating few folders inside images/ folder for storing question specific images and presentation related images which are generated through out the plot. We will be creating images/Q1, images/Q2 and images/Presentation for those respective files.\n\n\n\n\n\n\nNote:\n\n\n\nThese are the planned approaches, and we intend to explore and solve the problem statement which we came up with. Parts of our approach might change in the final implementation."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "",
    "text": "This study delves into a comprehensive analysis of aircraft crashes in the United States spanning from 1980 to 2022. It focuses on exploring crash locations, timings, consequences, and the influencing factors behind these incidents. And the dataset also comprises of crashes with all kinds of airways like commerical, personal, navy etc,. Leveraging a detailed dataset sourced from the National Transportation Safety Board (NTSB), the research utilizes data visualization techniques and time-series analyses to uncover correlations and trends associated with these aviation mishaps."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "",
    "text": "This study delves into a comprehensive analysis of aircraft crashes in the United States spanning from 1980 to 2022. It focuses on exploring crash locations, timings, consequences, and the influencing factors behind these incidents. And the dataset also comprises of crashes with all kinds of airways like commerical, personal, navy etc,. Leveraging a detailed dataset sourced from the National Transportation Safety Board (NTSB), the research utilizes data visualization techniques and time-series analyses to uncover correlations and trends associated with these aviation mishaps."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Introduction:",
    "text": "Introduction:\nThe objective of this study is to meticulously examine aircraft crashes’ locations, timings, and consequences during the specified time frame. The research aims to discern correlations, if any, contributing to these incidents and to ascertain whether certain regions are more prone to a higher number of crashes.\nThe research methodology involves a thorough analysis of the NTSB dataset, employing various data visualization tools and statistical analyses. Specifically, a choropleth is generated to visualize crash frequencies across different regions, while a radial bar plot illustrates crashes during specific flight phases. Additionally, the study investigates crash causes and their correlation with the severity of outcomes through waffle chart to visualize proportions and distribution chart to go over the distrubtion of that categegory over the time. A radar plot is utilized to explore crash occurrences concerning weather conditions and months. And then incorporating the whole visualization into a Shiny App to make it accessible to everyone."
  },
  {
    "objectID": "index.html#examining-aircraft-crashes-with-a-focus-on-their-locations-timings-and-consequences",
    "href": "index.html#examining-aircraft-crashes-with-a-focus-on-their-locations-timings-and-consequences",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Examining Aircraft Crashes, with a focus on their locations, timings, and consequences",
    "text": "Examining Aircraft Crashes, with a focus on their locations, timings, and consequences\n\nTime series analysis of fatalities, and types of injuries\nApproach\nWe aim to analyze the historical data on fatalities and injuries to understand the trends over the years. To initiate our investigation, we have created two animations. The first animation illustrates the cumulative count of both fatalities and injuries over time, employing the geom_line() function and incorporating a flight image to signify the movement of data points within the plot. In the second animation, we have categorized fatalities based on the severity of injuries, providing a visual representation of how different types of fatalities have evolved over time.\n\n\nTime Series - Total Fatalities\n# Creating Animated Plot for Total Faltalities\nImage &lt;-\n  \"images/airplane.png\"  #Save Image instead of inserting emoji\n\n# Labelling the axes and adding title to the plot for Fatalities\np &lt;- ggplot(flights_ntsb_timeseries,\n            aes(x = event_year,\n                y = total_fatalities)) +\n  geom_line() +\n  geom_image(aes(image = Image),\n             size = 0.05) +\n  labs(title = \"Yearly Aircraft Crash Fatalities\",\n       x = \"Year\",\n       y = \"Total Fatalities\") +\n  theme_minimal()\n\n# Animating the plot\nanimated_plot &lt;- p +\n  transition_reveal(event_year) +\n  ease_aes('linear') +\n  shadow_mark()\n\n# Animating the plot\nanimate(\n  animated_plot,\n  nframes = 200,\n  width = 800,\n  height = 600,\n  renderer = gifski_renderer()\n)\n\nanimated_plot\n\n\n\n\n\n\n\n\n\nFindings\nThere has been a general decrease in the number of total fatalities from 1980 to 2022. A notable spike in fatalities was observed in 2001, attributed to the 9/11 attacks. Post-2001, a significant decline in fatalities was noted. This can be interpreted as more and more safety measures has been taken into consideration as the time passed by which has lead to the decrease in air crashes. There might be some situations where commercial air crashes happen due to new technology being introduced and pilot’s being unable to adapt to it as per this article.\n\n\nTime Series - Injuries severity\n# all 3 plots with label - animated \n\n\nfcdata &lt;- flights_ntsb_timeseries |&gt;\n  ungroup() |&gt;\n  pivot_longer(cols = starts_with(\"total_\"),\n               names_to = \"Category\",\n               values_to = \"Count\") |&gt;\n  mutate(\n    Category = case_when(\n      Category == \"total_fatalities\" ~ \"Fatalities\",\n      Category == \"total_serious_injuries\" ~ \"Serious\\nInjuries\",\n      Category == \"total_minor_injuries\" ~ \"Minor\\nInjuries\"\n    )\n  )\n\n\n\n# Creating the animated plot\nanimation_fcdata &lt;- ggplot(fcdata,\n                           aes(event_year,\n                               Count,\n                               group = Category,\n                               color = Category)) +\n  geom_line(size = 1.3, show.legend = FALSE) +\n  geom_segment(\n    aes(xend = max(event_year) +\n          0.1,\n        yend = Count),\n    linetype = 2,\n    colour = 'grey',\n    show.legend = FALSE\n  ) +\n  geom_point(size = 2,\n             show.legend = FALSE) +\n  geom_text(\n    aes(\n      x = max(event_year) + 0.1,\n      label = Category,\n      color = \"#000000\"\n    ),\n    size = 5,\n    hjust = 0,\n    show.legend = FALSE\n  ) +\n  geom_vline(xintercept = 2001, color = \"red\", size = 1.25) +\n  transition_reveal(event_year) +\n  coord_cartesian(clip = 'off') +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 20),\n        plot.margin = margin(5.5, 40, 5.5, 5.5),\n        axis.text = element_text(size = 12),\n        axis.title = element_text(hjust = 0, size = 12)) +\n  labs(title = 'Aircraft Crash Statistics Over Time',\n       y = 'Number of Crashes',\n       x = element_blank())\n\n# Animating the plot\nanimated_fcdata &lt;- animate(\n  animation_fcdata,\n  fps = 10,\n  duration = 25,\n  width = 1200,\n  height = 700,\n  renderer = gifski_renderer(\"images/animated_fcdata.gif\")\n)\n\n# Display or save the animated plot\nanimated_fcdata\n\n\n\n\n\n\n\n\n\n\n\nChoropleth map on number of crashes in different regions(US map)\nApproach\nThe approach for creating a choropleth map of flight crashes in different U.S. regions involves data preparation, map generation, and animation. The dataset is filtered for valid latitude and longitude values, and relevant columns are selected. To ensure completeness, unique states and all years are identified. A function, is defined to create maps for each input year, customizing color scales. Maps are saved for each year using a loop.\nThe animation is created by loading saved map images, joining them into a sequence, and generating the animation. The resulting animation visually represents the temporal evolution of flight crashes across U.S. states.\n\n\nChoropleth Map - Temporal analysis\n# Creating a function to plot a map\ngetHexBinMap &lt;- function(input_year) {\n  plot_data &lt;- flights_ntsb_maps |&gt;\n    filter(event_year == input_year)\n  \n  plot_usmap(data = plot_data,\n             values = \"total_crashes\", \n             color = \"black\") +\n    theme_void() +\n    scale_fill_gradientn(\n      colors = met.brewer(\"Hokusai2\"),\n      name = \"Number of Crashes\",\n      limits = c(0, 400)\n    ) +\n    labs(title = sprintf(\"Flight crashes in US states during %d\", input_year)) +\n    theme(\n      legend.position = 'right',\n      plot.title = element_text(size = 40, hjust = 0.5, face = \"bold\", vjust = -1),\n      legend.text = element_text(size = 18),\n      legend.title = element_text(size = 20, face = \"bold\")\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\nFindings\nLooking at the choropleth map California, Florida, Alaska, Texas has the highest number of crashes. Though the number of crashes has reduced significantly over the time but these states remained at the top in number of crashes. The probable reason might be these states being the east and west border of the Country and consists of more air traffic. And these states also have more air force bases where non-commercial air crashes must have been recorded. Alaska being involved in the list can be related to it’s weather conditions and pilot’s being over confident in those situation as reported in this thread.\n\n\nRadial Bar Plot\nApproach\nWe plotted the radial bar plot to explore the distribution of flight crashes and associated injuries across different phases of flight. By categorizing flight phases into Landing, Takeoff, Approach, Maneuvering, Climb, and Other this visualization aims to uncover insights into the critical moments during a flight where incidents are more likely to occur. The first graph highlights the count of crashes in each phase, while the second graph focuses on the count of injuries, providing a broad perspective on the safety challenges associated with each phase.\n\n\nRadial Bar Plot - Total Crashes\n# Plotting a Radial Barplot to show the Total Count of Crashes and phase of flight \nflights_radial_bar_crashes &lt;-\n  ggplot(flights_ntsb_radial,\n         aes(x = fct_rev(flight_phase), y = total_crashes, \n             fill = flight_phase)) +\n  geom_bar(stat = \"identity\", width = 0.8) +\n  geom_text(hjust = 1.2, size = 3.6, \n            aes(y = 0, label = comma(total_crashes))) +\n  coord_polar(theta = \"y\") +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Phase of Flight\",\n    title = \"A Radial View of Total Crashes\",\n    subtitle = \"as per the phase of flight\",\n    caption = \"\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 27000, by = 5000),\n    limits = c(0, 27000)\n  ) +\n  scale_x_discrete(expand = c(0.35, 0)) + \n  scale_fill_frontiers() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n    ) +\n  guides(\n      fill = guide_legend(\n        nrow = 1,\n        direction = \"horizontal\",\n        title.position = \"top\",\n        title.hjust = 0.5,\n        label.position = \"bottom\",\n        label.hjust = 1,\n        label.vjust = 1,\n        label.theme = element_text(lineheight = 0.25, size = 11),\n        keywidth = 1.5,\n        keyheight = 0.5\n      )\n    )\nflights_radial_bar_crashes\n\n\n\n\n\n\n\n\n\nRadial Bar Plot - Total Crashes\n# remaining - titles, some texts\n# interactive - plotly\n# animate - plotly by years or gganimate bar growth\n\n\nFindings\nThe radial bar plot offers an intuitive and visually appealing representation of the distribution of crashes and injuries throughout various phases of flight. In the first graph, the bars radiating from the center depict the count of crashes in each phase, allowing for a quick comparison of their frequencies. This visualization enables the identification of phases that might be particularly prone to incidents, guiding further investigation into the contributing factors.\n\n\nRadial Bar Plot - Total Injuries\n# Plotting a Radial Barplot to show the Total Count of Injuries and phase of flight \nflights_radial_bar_injuries &lt;-\n  ggplot(flights_ntsb_radial,\n         aes(x = fct_rev(flight_phase), y = total_injuries, \n             fill = flight_phase)) +\n  geom_bar(stat = \"identity\", width = 0.8) +\n  geom_text(hjust = 1.2, size = 3.6, \n            aes(y = 0, label = comma(total_injuries))) +\n  coord_polar(theta = \"y\") +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = \"Phase of Flight\",\n    title = \"A Radial View of Total Injuries\",\n    subtitle = \"as per the phase of flight\",\n    caption = \"\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 13200, by = 1000),\n    limits = c(0, 13200)\n  ) +\n  scale_x_discrete(expand = c(0.35, 0)) + \n  scale_fill_frontiers() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n    ) +\n  guides(\n      fill = guide_legend(\n        nrow = 1,\n        direction = \"horizontal\",\n        title.position = \"top\",\n        title.hjust = 0.5,\n        label.position = \"bottom\",\n        label.hjust = 1,\n        label.vjust = 1,\n        label.theme = element_text(lineheight = 0.25, size = 11),\n        keywidth = 1.5,\n        keyheight = 0.5\n      )\n    ) \n\nflights_radial_bar_injuries\n\n\n\n\n\n\n\n\n\nRadial Bar Plot - Total Injuries\n# remaining - titles, some texts\n# interactive - plotly\n# animate - plotly by years or gganimate bar growth\n\n\nThe second graph, depicting injuries, provides an additional layer of analysis. By comparing the counts of injuries across different flight phases, we can discern whether certain phases are more likely to result in severe consequences. This insight is crucial for understanding the potential risks associated with specific segments of a flight, informing safety measures and protocols."
  },
  {
    "objectID": "index.html#analysis-of-causes-of-crashes",
    "href": "index.html#analysis-of-causes-of-crashes",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Analysis of Causes of Crashes",
    "text": "Analysis of Causes of Crashes\nWe focused on the text report column of the air crashes data which is probable_cause and we have summarized the text report using hugging face in python which can be found in the folder Probable_Cause. We used the summarized text in exploring the probable causes of these crashes.\n\nWaffle chart\nApproach\nWe prepare data by calculating percentages and determining tile numbers for causes of airplane crashes. It generates a waffle chart using ggplot2, displaying causes represented by ‘✈’ symbols in a grid layout, each tile proportional to the cause’s percentage, and then converts it into an interactive plot using plotly for visualization.\n\n\nWaffle Chart - Probable Cause Proportion\nwaffle_data &lt;- count_waffle %&gt;%\n  slice(rep(1:n(), times = number)) %&gt;%\n  mutate(fill_value = ifelse(row_number() &lt;= sum(floored), floored, floored + 1))\n\nplot_data &lt;- expand.grid(x = 0:9, y = 0:9) %&gt;%\n  rowwise() |&gt;\n  mutate(index = 1 + sum(x * 10 + y &gt;= cumsum(count_waffle$number)),\n         cause = count_waffle$cause_summary[[index]])\n\n# Create a waffle plot\np &lt;-\n  ggplot(plot_data, aes(x, y, color = cause, group = cause), show.legend =\n           F) +\n  geom_text(label = \"✈\",\n            family = 'sans',\n            size = 8) +\n  scale_color_manual(values = met.brewer(\"Redon\")) +\n  coord_equal() +\n  labs(title = \"Waffle chart showing different causes of crashes\",\n       colour = 'Cause')\nflight_plot &lt;- ggplotly(p, tooltip = c(\"color\")) |&gt;\n  layout(\n    xaxis = list(\n      showgrid = FALSE,\n      zeroline = FALSE,\n      showticklabels = FALSE,\n      title = \"\"\n    ),\n    yaxis = list(\n      showgrid = FALSE,\n      zeroline = FALSE,\n      showticklabels = FALSE,\n      title = \"\"\n    ),\n    showlegend = FALSE\n  )\n\nflight_plot\n\n\n\n\n\n\nFindings\nThe waffle chart effectively showcased the distribution of crash causes, emphasizing the prominence of human error(pilot failures) in aviation incidents. The data highlighted the need for enhanced safety measures and training to address the identified causes of crashes.\n\n\nDensity Plot\nApproach\nWe plotted the density plot using ggplot’s geom_density function is to visually analyze the distribution of flight crashes over the years based on their probable causes. By utilizing the probable_cause_flights dataset and focusing on the cause_summary column, this visualization aims to provide insights into the changing patterns and trends of aviation incidents. The x-axis represents the years, offering a chronological perspective, while the y-axis portrays the density of crashes associated with specific causes. Here, we have focused on the attribute Pilot's Failure\n\n\nDistrubtion Chart - Pilot’s Fault?\nggplot(\n  subset(\n    probable_cause_flights,\n    probable_cause_flights$cause_summary == \"pilot's failure\"\n  )\n) +\n  geom_density(aes(\n    x = year(event_date),\n    fill = factor(highest_injury_level, levels = c(\"Fatal\", \"Serious\", \"Minor\"))\n  ), alpha = 0.7) +\n  scale_fill_manual(values = c(\"#bcd67c\", \"#d398ff\", \"#82dfe2\")) +\n  labs(title = \"Distribution of crashes caused by pilot's negligence over time\",\n       x = \"Year\",\n       y = \"Density\",\n       fill = \"Highest Injury Level\") +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.major = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text = element_text(size = 10),\n    axis.title = element_text(hjust = 0, size = 10)\n    )\n\n\n\n\n\n\n\n\n\nFindings\nThis visual representation allows us to identify clusters of high density, indicating periods or years where certain causes were more prevalent. Additionally, it facilitates the detection of outliers or shifts in patterns, enabling a more nuanced exploration of the dataset. Here, we can see that injuries in particular have reduced overtime with the number of Fatal Injuries reducing significantly over the past few decades."
  },
  {
    "objectID": "index.html#assessing-the-influence-of-weather-conditions-on-crashes",
    "href": "index.html#assessing-the-influence-of-weather-conditions-on-crashes",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Assessing the Influence of Weather Conditions on Crashes",
    "text": "Assessing the Influence of Weather Conditions on Crashes\n\nRadar Plot\nApproach\nWe plot the Radar Plot using Plotly for R to comprehensively assess the influence of weather conditions on flight crashes. Leveraging the flights_ntsb_radar dataset which we derived from the original flights_ntsb dataset and categorizing flight crashes based on Visual Meteorological Conditions (VMC) and Instrument Meteorological Conditions (IMC). This visualization seeks to highlight the varying degrees of impact these conditions have on aviation safety. By layering both datasets on a radar plot, we aim to provide a holistic perspective on how different weather scenarios contribute to flight incidents.\n\n\nRadar Chart - Weather Relation\n# Plotting an Interactive Radar Plot using Plotly\nradar_chart &lt;- plot_ly(type = 'scatterpolar',\n               fill = 'toself',\n               mode = 'lines+markers')\n\n# first plot tracing of VMC data\nradar_chart &lt;- radar_chart |&gt;\n  add_trace(\n    r = radar_trace_r2,\n    theta = radar_theta,\n    name = 'VMC'\n  )\n# second plot tracing of IMC data\nradar_chart &lt;- radar_chart |&gt;\n  add_trace(\n    r = radar_trace_r1,\n    theta = radar_theta,\n    name = 'IMC'\n  )\n# plot layout configuration\nradar_chart &lt;- radar_chart |&gt;\n  layout(polar = list(radialaxis = list(\n    visible = T,\n    range = c(0, 10500)\n  )))\n\nradar_chart\n\n\n\n\n\n\nFindings\nThe radar plot serves as an effective means to showcase the multivariate nature of weather conditions and their relationship with flight crashes. Each axis on the radar represents a specific parameter related to aviation safety, such as visibility, cloud cover, wind speed, and temperature. The radar plot allows for the simultaneous comparison of these parameters for VMC and IMC, unveiling patterns and discrepancies in their respective contributions to incidents."
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Conclusion",
    "text": "Conclusion\nOver the 1980-2020 period, aviation has witnessed a significant decrease in the number of crashes and fatalities. Notably, the events of 9/11 in 2001 led to a spike in fatalities, but overall trends show a consistent decline. The aviation industry’s implementation of stringent rules has played a crucial role in enhancing safety. With California, Alaska, Texas, and Florida experiencing higher frequencies. In addition to human factors and mechanical issues, weather patterns also played a role in aviation incidents. A radar plot revealed distinct correlations between specific weather conditions and increased crash occurrences in certain months.\nThis collective progress signifies a positive shift towards safer air travel. With fatalities and crashes decreasing over time, the aviation industry is advancing towards a safer and more efficient mode of transport. These improvements align with the industry’s goal of providing faster and safer global travel, with flights covering vast distances in just a couple of hours.\n\n\n\n\n\n\nReferences\n\n\n\n\n\nTime Series info - 2001 crashes\nWaffle Plot - Waffle Chart\nShiny - Shiny\ngganimate - gganimate\nplotly - plotly\nissues - legend\nNTSB Dashboard - NTSB"
  },
  {
    "objectID": "Probable_Cause/probable_cause_summary.html",
    "href": "Probable_Cause/probable_cause_summary.html",
    "title": "Infographic Innovators",
    "section": "",
    "text": "# Use a pipeline as a high-level helper\nfrom transformers import pipeline\nimport pandas as pd\n\npipe = pipeline(\"summarization\", model=\"antonkurylo/t5-base-news_headlines_8tokens\")\n\ndf=pd.read_csv(\"flights_ntsb.csv\")\ndf.dropna(subset=[\"ProbableCause\"],inplace=True)\n#k=pipe(list(df.ProbableCause[:10]), max_length=5, min_length=3, do_sample=False)\ncause=pipe(list(df.ProbableCause), max_length=6, min_length=3, do_sample=False)\n#df.ProbableCause[:10]\nfile_path = \"output.txt\"\nProbable_Cause=[]\n# Open the file in write mode and write each value to the file\nwith open(file_path, \"r\") as file:\n    Probable_Cause=(file.read().split(\"\\n\"))"
  },
  {
    "objectID": "presentation.html#objective",
    "href": "presentation.html#objective",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Objective",
    "text": "Objective\n\nConduct an in-depth analysis of aircraft crashes within the United States to uncover temporal trends and geographical patterns.\nBackground\n\nDataset procured from the National Transportation Safety Board (NSTB).\nContains records of aircraft crashes in the U.S. from Jan 1, 1980, to Dec 31, 2022.\nOriginally comprised 89,134 rows and 38 columns, refined to 20 columns for focused analysis.\n\n\n\nValue\n\nEnhance understanding of aviation safety and factors contributing to aircraft crashes.\nPersonalize insights based on diverse experiences with air travel."
  },
  {
    "objectID": "presentation.html#questions-proposed",
    "href": "presentation.html#questions-proposed",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Questions Proposed",
    "text": "Questions Proposed\n\n\nWhat are the aircraft crashes’ locations, timings, and consequences?\nWhat contributes to the crashes, and does weather significantly impact the increase in aircraft crashes?"
  },
  {
    "objectID": "presentation.html#time-series-analysis",
    "href": "presentation.html#time-series-analysis",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Time-Series Analysis",
    "text": "Time-Series Analysis"
  },
  {
    "objectID": "presentation.html#choropleth-map",
    "href": "presentation.html#choropleth-map",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Choropleth Map",
    "text": "Choropleth Map"
  },
  {
    "objectID": "presentation.html#radial-bar---total-crashes",
    "href": "presentation.html#radial-bar---total-crashes",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Radial Bar - Total Crashes",
    "text": "Radial Bar - Total Crashes"
  },
  {
    "objectID": "presentation.html#radial-bar-plot---total-injuries",
    "href": "presentation.html#radial-bar-plot---total-injuries",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Radial Bar Plot - Total Injuries",
    "text": "Radial Bar Plot - Total Injuries"
  },
  {
    "objectID": "presentation.html#waffle-chart",
    "href": "presentation.html#waffle-chart",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Waffle Chart",
    "text": "Waffle Chart"
  },
  {
    "objectID": "presentation.html#density-plot",
    "href": "presentation.html#density-plot",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Density Plot",
    "text": "Density Plot"
  },
  {
    "objectID": "presentation.html#radar-plot",
    "href": "presentation.html#radar-plot",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Radar Plot",
    "text": "Radar Plot\n\n\n\n\n\n\n\nHere, VMC stands for Visual Meteorological Conditions and IMC stands for Instrument Meteorological Conditions."
  },
  {
    "objectID": "presentation.html#conclusion",
    "href": "presentation.html#conclusion",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Conclusion",
    "text": "Conclusion\n\n\nAnnual crash occurrences remain notable, but a declining trend is observed over the decades from 1980 to 2022.\nThe decline in fatalities over time underscores the effectiveness of safety measures and protocols implemented in the aviation sector.\nShiny App - From Takeoff to Touchdown: Dissecting Data on Air Disasters"
  },
  {
    "objectID": "presentation.html#problems-faced",
    "href": "presentation.html#problems-faced",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Problems Faced",
    "text": "Problems Faced\n\n\nLot of information from the to process and visualize.\nThe obtained dataset was partially skewed which made it harder to normalize certain metrics for visualization.\nPerforming Data Wrangling on the dataset was difficult as it was of size 89,134 rows and 20 columns.\nBut, because the dataset was vast, we could also create multiple visualizations which we could present for this project."
  },
  {
    "objectID": "presentation.html#future-scope",
    "href": "presentation.html#future-scope",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Future Scope",
    "text": "Future Scope\n\n\nExploring other countries and finding a credible source for the data.\nExploring Data and correlating with other credible sources to find the exact reason behind the crash.\nThe developed Shiny App can be used as an alternative to the current dashboard which visualizes flight crashes on the NTSB.gov website.\nDiving in Deeper into flight crashes and visualizing flight paths and plotting real-time status of flights."
  },
  {
    "objectID": "presentation.html#thank-you",
    "href": "presentation.html#thank-you",
    "title": "From Takeoff to Touchdown: Dissecting Data on Air Disasters",
    "section": "Thank you",
    "text": "Thank you\n\n\n\n\n\n\n\n\n\n\n✈️ Infographic Innovators"
  },
  {
    "objectID": "Probable_Cause/probable_cause_datawragling.html",
    "href": "Probable_Cause/probable_cause_datawragling.html",
    "title": "Infographic Innovators",
    "section": "",
    "text": "import pandas as pd\nfile_path = \"output.txt\"\nProbable_Cause=[]\n# Open the file in write mode and write each value to the file\nwith open(file_path, \"r\") as file:\n    Probable_Cause=(file.read().split(\"\\n\"))\nflights=pd.read_csv(\"flight_crash_data_NTSB.csv\")\nflights.dropna(subset=[\"ProbableCause\"],inplace=True)\nflights[\"Probable_Cause\"]=Probable_Cause[:-1]\nflights['ProbableCause'] = flights['ProbableCause'].str.lower()\nflights['Probable_Cause'] = flights['Probable_Cause'].str.lower()\n\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1447201804.py:7: DtypeWarning: Columns (17,23,27,35,36) have mixed types. Specify dtype option on import or set low_memory=False.\n  flights=pd.read_csv(\"flight_crash_data_NTSB.csv\")\n\n\n\nflights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"engine\") |\n                      flights.ProbableCause.str.contains(\"loss of engine power\")|\n                      flights.Probable_Cause.str.contains(\"power loss\")|\n                      flights.ProbableCause.str.contains(\"engine fail\")]=\"loss of engine power\"\nflights.Probable_Cause.loc[flights.Probable_Cause==\"pilot's inadequate compensation\"]=\"crosswinds\"\nflights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"inadequate maintenance\")|\n                      flights.ProbableCause.str.contains(\"inadequate preflight\")\n                      ]=\"inadequate flight maintenance\"\nflights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"plane control\")|\n                      flights.Probable_Cause.str.contains(\"loss of control during\")|\n                      flights.Probable_Cause.str.contains(\"improper use of plane control\")|\n                      flights.Probable_Cause.str.contains(\"loss of airplane control\")|\n                      flights.Probable_Cause.str.contains(\"in-flight loss\")|\n                      flights.Probable_Cause.str.contains(\"loss of contro\")|\n                      flights.Probable_Cause.str.contains(\"loss of aircraft control\")]=\"loss of plane control\"\nflights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"fire\")]=\"in-flight fire\"\nflights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"pilot's inadequate compensation\")|\n                      flights.Probable_Cause.str.contains(\"wind condit\")]=\"crosswinds\"\nflights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"aerodynamic stall\")]=\"aerodynamic stall\"\nflights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"fuel\")]=\"out of fuel\"\nflights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"fatigue\") |\n                      flights.Probable_Cause.str.contains(\"failure of the\") |\n                      flights.Probable_Cause.str.contains(\"inadvertent\")|\n                      flights.Probable_Cause.str.contains(\"landing gear\")|\n                      flights.Probable_Cause.str.contains(\"carburetor\")|\n                      flights.Probable_Cause.str.contains(\"airplane's\")|\n                      flights.Probable_Cause.str.contains(\"airplane’s\")|\n                      flights.Probable_Cause.str.contains(\"in-flight separation\")|\n                      flights.Probable_Cause.str.contains(\"separation of\")\n                      ]=\"physical damage\"\nflights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"undetermined\")]=\"undetermined\"\nflights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"pilot's failure to\") | \n                      flights.Probable_Cause.str.contains(\"pilot's\") |\n                      flights.Probable_Cause.str.contains(\"flight instructor's failure\") |\n                      flights.Probable_Cause.str.contains(\"pilot\")|\n                      flights.Probable_Cause.str.contains(\"a factor wa\")|\n                      flights.Probable_Cause.str.contains(\"student pi\")|\n                      flights.Probable_Cause.str.contains(\"exclusive\")|\n                      flights.Probable_Cause.str.contains(\"factors contributing to\")|\n                      flights.Probable_Cause.str.contains(\"a factor in\")|\n                      flights.Probable_Cause.str.contains(\"a student\")|\n                      flights.Probable_Cause.str.contains(\"contributing to the accident\")|\n                      flights.Probable_Cause.str.contains(\"flight instructor's inadequate\")|\n                      flights.Probable_Cause.str.contains(\"flight instructor delayed remedial\")|\n                      flights.Probable_Cause.str.contains(\"improper\")|\n                      flights.Probable_Cause.str.contains(\"captain's failure to\")|\n                      flights.Probable_Cause.str.contains(\"improved\")|\n                      flights.Probable_Cause.str.contains(\"darkness,\")|\n                      flights.Probable_Cause.str.contains(\"a factor to\")\n                      ]=\"pilot's failure\"\ncause=[\"pilot's failure\",\n 'loss of engine power',\n 'physical damage',\n 'impact with trees',\n 'inadequate flight maintenance',\n 'aerodynamic stall',\n 'loss of plane control',\n 'crosswinds',\n 'in-flight fire',\n 'out of fuel',\n 'collision with birds',\n 'in-flight collision',\n 'loss of directional',\n 'undetermined']\nflights.loc[~flights['Probable_Cause'].isin(cause), 'Probable_Cause'] = \"Other\"\n\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"engine\") |\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause==\"pilot's inadequate compensation\"]=\"crosswinds\"\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:6: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"inadequate maintenance\")|\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:9: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"plane control\")|\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:16: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"fire\")]=\"in-flight fire\"\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:17: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"pilot's inadequate compensation\")|\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"aerodynamic stall\")]=\"aerodynamic stall\"\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:20: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"fuel\")]=\"out of fuel\"\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:21: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.ProbableCause.str.contains(\"fatigue\") |\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:31: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"undetermined\")]=\"undetermined\"\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_7368\\1004940774.py:32: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  flights.Probable_Cause.loc[flights.Probable_Cause.str.contains(\"pilot's failure to\") |\n\n\n\nflights.to_csv(\"new_flights_PC.csv\",index=False)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by Infographic Innovators. For INFO 526 - Data Analysis & Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: Eshaan Mathakari: First-year graduate student in Data Science at University of Arizona., github: @eshaanmathakari\nTeam member 2: Bharath Velamala, First-year graduate student in Data Science at University of Arizona., github: @bharath03-a\nTeam member 3: Thanoosha Naidu Karri, First-year graduate student in Data Science at University of Arizona., guthub: @thanooshakarri\nTeam member 4: Antonio Escalante Jr, First-year graduate student in Data Science at University of Arizona., github: @datalyticsintel"
  }
]